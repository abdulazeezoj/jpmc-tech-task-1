From 87efb2114edf1965e44648fe7faa2323ea75c8d0 Mon Sep 17 00:00:00 2001
From: Abdulazeez Jimoh <abdulazeezojimoh@gmail.com>
Date: Wed, 12 Jan 2022 13:03:31 +0100
Subject: [PATCH] Fix the broken client data feed and add unit tests

Update client3.py - Fix the broken client data feed script in the repository by making the required adjustments to it.

Update client_test.py - Add unit tests in the test script in the repository.
---
 client3.py     | 51 ++++++++++++++++-----------
 client_test.py | 96 ++++++++++++++++++++++++++++++++++++++++++--------
 2 files changed, 113 insertions(+), 34 deletions(-)

diff --git a/client3.py b/client3.py
index f1771c3..606e75d 100644
--- a/client3.py
+++ b/client3.py
@@ -1,4 +1,4 @@
-################################################################################
+###############################################################################
 #
 #  Permission is hereby granted, free of charge, to any person obtaining a
 #  copy of this software and associated documentation files (the "Software"),
@@ -29,31 +29,42 @@ QUERY = "http://localhost:8080/query?id={}"
 # 500 server request
 N = 500
 
+
 def getDataPoint(quote):
-	""" Produce all of the needed values to generate a datapoint """
-	""" ------------- Update this function ------------- """
-	stock = quote['stock']
-	bid_price = float(quote['top_bid']['price'])
-	ask_price = float(quote['top_ask']['price'])
-	price = bid_price
-	return stock, bid_price, ask_price, price
+    """ Produce all of the needed values to generate a datapoint """
+    """ ------------- Update this function ------------- """
+    stock = quote['stock']
+    bid_price = float(quote['top_bid']['price'])
+    ask_price = float(quote['top_ask']['price'])
+    price = (bid_price + ask_price) / 2
+    return stock, bid_price, ask_price, price
+
 
 def getRatio(price_a, price_b):
-	""" Get ratio of price_a and price_b """
-	""" ------------- Update this function ------------- """
-	""" Also create some unit tests for this function in client_test.py """
-	return 1
+    """ Get ratio of price_a and price_b """
+    """ ------------- Update this function ------------- """
+    """ Also create some unit tests for this function in client_test.py """
+    if price_b == 0:
+        # avoid eror when price_b is 0
+        return
+
+    return price_a / price_b
+
 
 # Main
 if __name__ == "__main__":
 
-	# Query the price once every N seconds.
-	for _ in iter(range(N)):
-		quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
+    # Query the price once every N seconds.
+    for _ in iter(range(N)):
+        quotes = json.loads(urllib.request.urlopen(
+            QUERY.format(random.random())).read())
 
-		""" ----------- Update to get the ratio --------------- """
-		for quote in quotes:
-			stock, bid_price, ask_price, price = getDataPoint(quote)
-			print ("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
+        """ ----------- Update to get the ratio --------------- """
+        prices = {}
+        for quote in quotes:
+            stock, bid_price, ask_price, price = getDataPoint(quote)
+            prices[stock] = price
+            print("Quoted %s at (bid:%s, ask:%s, price:%s)" %
+                  (stock, bid_price, ask_price, price))
 
-		print ("Ratio %s" % getRatio(price, price))
+        print("Ratio %s" % getRatio(prices['ABC'], prices['DEF']))
diff --git a/client_test.py b/client_test.py
index af2bf26..a87e6b7 100644
--- a/client_test.py
+++ b/client_test.py
@@ -1,24 +1,92 @@
 import unittest
-from client3 import getDataPoint
+from client3 import getDataPoint, getRatio
+
 
 class ClientTest(unittest.TestCase):
-  def test_getDataPoint_calculatePrice(self):
-    quotes = [
-      {'top_ask': {'price': 121.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
-      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
-    ]
-    """ ------------ Add the assertion below ------------ """
+    def test_getDataPoint_calculatePrice(self):
+        quotes = [
+            {
+                'top_ask': {'price': 121.2, 'size': 36},
+                'timestamp': '2019-02-11 22:06:30.572453',
+                'top_bid': {'price': 120.48, 'size': 109},
+                'id': '0.109974697771',
+                'stock': 'ABC'
+            },
+            {
+                'top_ask': {'price': 121.68, 'size': 4},
+                'timestamp': '2019-02-11 22:06:30.572453',
+                'top_bid': {'price': 117.87, 'size': 81},
+                'id': '0.109974697771',
+                'stock': 'DEF'
+            }
+        ]
+        """ ------------ Add the assertion below ------------ """
+        for quote in quotes:
+            self.assertEqual(
+                getDataPoint(quote),
+                (
+                    quote['stock'],
+                    quote['top_bid']['price'],
+                    quote['top_ask']['price'],
+                    (quote['top_bid']['price'] + quote['top_ask']['price'])/2
+                )
+            )
+
+    def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
+        quotes = [
+            {
+                'top_ask': {'price': 119.2, 'size': 36},
+                'timestamp': '2019-02-11 22:06:30.572453',
+                'top_bid': {'price': 120.48, 'size': 109},
+                'id': '0.109974697771',
+                'stock': 'ABC'
+            },
+            {
+                'top_ask': {'price': 121.68, 'size': 4},
+                'timestamp': '2019-02-11 22:06:30.572453',
+                'top_bid': {'price': 117.87, 'size': 81},
+                'id': '0.109974697771',
+                'stock': 'DEF'
+            }
+        ]
+        """ ------------ Add the assertion below ------------ """
+        for quote in quotes:
+            self.assertEqual(
+                getDataPoint(quote),
+                (
+                    quote['stock'],
+                    quote['top_bid']['price'],
+                    quote['top_ask']['price'],
+                    (quote['top_bid']['price'] + quote['top_ask']['price'])/2
+                )
+            )
+
+    """ ------------ Add more unit tests ------------ """
+
+    def test_getRatio_priceBZero(self):
+        price_a = 119.2
+        price_b = 0
+        self.assertIsNone(getRatio(price_a, price_b))
 
-  def test_getDataPoint_calculatePriceBidGreaterThanAsk(self):
-    quotes = [
-      {'top_ask': {'price': 119.2, 'size': 36}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 120.48, 'size': 109}, 'id': '0.109974697771', 'stock': 'ABC'},
-      {'top_ask': {'price': 121.68, 'size': 4}, 'timestamp': '2019-02-11 22:06:30.572453', 'top_bid': {'price': 117.87, 'size': 81}, 'id': '0.109974697771', 'stock': 'DEF'}
-    ]
-    """ ------------ Add the assertion below ------------ """
+    def test_getRatio_priceAZero(self):
+        price_a = 0
+        price_b = 121.68
+        self.assertEqual(getRatio(price_a, price_b), 0)
 
+    def test_getRatio_greaterThan1(self):
+        price_a = 346.48
+        price_b = 166.39
+        self.assertGreater(getRatio(price_a, price_b), 1)
 
-  """ ------------ Add more unit tests ------------ """
+    def test_getRatio_LessThan1(self):
+        price_a = 166.39
+        price_b = 356.48
+        self.assertLess(getRatio(price_a, price_b), 1)
 
+    def test_getRatio_exactlyOne(self):
+        price_a = 356.48
+        price_b = 356.48
+        self.assertEqual(getRatio(price_a, price_b), 1)
 
 
 if __name__ == '__main__':
-- 
2.34.1.windows.1

